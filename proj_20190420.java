package gitPro;

import java.util.Scanner;

public class proj_20190420 {

	/*
	 * 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 
	 * 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 
	 * 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
	   26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
	     위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
       N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
	 */
	public static void main(String[] args) {

		Scanner scan = new Scanner(System.in);
		
		System.out.print("수 입력: ");
		int num = scan.nextInt();
		
		int stand = num;
		
		int cnt = 1;
		
		/*
		 * 십진수를 이용해 수를 나눔.
		 * 예를들어 26을 입력했을때 6과 8이 나와 68이 되어야 하는데 6이 나와야 하는 십의자리 수는 나머지로(십진수는 일의자리가 무조건 나머지가 된다)
		 * 8이 나와야 하는 일의자리수는 2와 6을 더하게끔 몫과 나머지를 구한 후 얘를 더한다.
		 * 다만 68을 입력할 경우 일의자리수가 6+8=14로 두자리수가 나오기 때문에 더한 후에 얘의 나머지를 갖다 써야하며
		 * 십의자리인 8의 경우 십의자리에 써야하므로 10을 곱해 80으로 만들어준다*/
		while(true){
			num = (num%10)*10+((num/10+num%10))%10;
			
			if(num == stand) 
				break;
			else cnt++;
		}
		
		System.out.println("루트 수 : "+cnt);
	}

}
